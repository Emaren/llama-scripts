#!/usr/bin/env bash
set -euo pipefail
shopt -s nullglob

# ─── CONFIG ─────────────────────────────────────────────────────────────
PYSHORT="3.13"
ROOT="$HOME/projects"
PYTHON_BIN="$(command -v python${PYSHORT} || command -v python3 || true)"

if [[ -z "$PYTHON_BIN" || ! -x "$PYTHON_BIN" ]]; then
  echo "❌ Python $PYSHORT not found. Try: brew install python@$PYSHORT"
  exit 1
fi

echo "🔥 Removing all .python-version files…"
find "$ROOT" -name '.python-version' -delete

echo "❌ Uninstalling all pyenv virtualenvs using 3.12…"
pyenv virtualenvs --bare | grep '^.*3\.12.*$' | while read -r venv; do
  echo "  🧨 Removing $venv"
  pyenv uninstall -f "$venv"
done

# ─── HARMONIZE LOOP ─────────────────────────────────────────────────────
echo "🔁 Rewriting all .envrc files and initializing venvs…"
for dir in "$ROOT"/*/; do
  [[ -d "$dir" ]] || continue
  cd "$dir"

  if [[ -f requirements.txt || -f pyproject.toml || -f setup.py ]]; then
    repo="$(basename "$dir")"
    echo "▶ Harmonizing: $repo"

    VENV_DIR=".direnv/python-$PYSHORT"
    ENVRC=".envrc"

    cat > "$ENVRC" <<EOF
# Auto-generated by harmonize-all.sh
export VIRTUAL_ENV="\$PWD/$VENV_DIR"
export PATH="\$VIRTUAL_ENV/bin:\$PATH"
source "\$VIRTUAL_ENV/bin/activate"
export PATH="\$PWD/bin:\$PATH"
EOF

    echo "  ✅ Wrote $ENVRC"
    direnv allow . >/dev/null || echo "⚠️  direnv failed for $repo"

    if [[ ! -d "$VENV_DIR" ]]; then
      echo "  🐍 Creating venv at $VENV_DIR …"
      "$PYTHON_BIN" -m venv "$VENV_DIR"
    else
      echo "  🧪 Existing venv found at $VENV_DIR"
    fi

    echo "  🚀 Upgrading pip …"
    source "$VENV_DIR/bin/activate"
    pip install --upgrade pip >/dev/null || echo "⚠️  pip upgrade failed in $repo"

    echo "✅ $repo ready."
    echo
  fi
done

echo "🏁 All projects are now harmonized using .direnv/python-$PYSHORT"
